package ProjectPacman;

public class PacmanModel implements ObserverOfPlayer{

    private final String interiorWall="#";
    private final String food="-";
    private final String door = "d";
    private final String powerUp = "R";
    private final String pacman="P";
    private String[][] board;
    private int boardWidth; // Array length
    private int boardHeight; // Number of arrays
    private PacPlayer pacmanEntity = new PacPlayer(); 
    
    public PacmanModel() {
        this.initBoard();
        pacmanEntity.setLives(3);
    }
    
    public void move(String direction){
        int x = pacmanEntity.getX();
        int y = pacmanEntity.getY();
        if(!wallCollision(direction)){
            if(direction.equals("UP")){
                board[x][y]=".";
                board[x-1][y]=pacman;
                pacmanEntity.setX(x-1);
            }
            if(direction.equals("DOWN")){
                board[x][y]=".";
                board[x+1][y]=pacman;
                pacmanEntity.setX(x+1);
            }
            if(direction.equals("LEFT")){

                // if (board[x][y-1].equals(".") && y-1==0){
                //     board[x][y]=".";
                //     board[x][getBoardWidth()-1] = pacman;
                //     pacmanEntity.setY(0);
                // }
                board[x][y]=".";
                board[x][y-1]=pacman;
                pacmanEntity.setY(y-1);
            }
            if(direction.equals("RIGHT")){
                if (board[x][y+1].equals(".") && y+1==getBoardWidth()-1){
                    board[x][y]=".";
                    board[x][0] = pacman;
                    pacmanEntity.setY(0);
                } else{
                    board[x][y]=".";
                    board[x][y+1]=pacman;
                    pacmanEntity.setY(y+1);
                }

            }
        }
    }

    public boolean wallCollision(String direction) {
        int x = pacmanEntity.getX();
        int y = pacmanEntity.getY();

        // check if the next move is valid based on the direction input
        if (direction.equals("UP") && !board[x - 1][y].equals(interiorWall) && !board[x - 1][y].equals(door)) {
            return false;
        } else if (direction.equals("DOWN") && !board[x + 1][y].equals(interiorWall) && !board[x + 1][y].equals(door)) {
            return false;
        } else if (direction.equals("LEFT") && !board[x][y - 1].equals(interiorWall) && !board[x][y -1].equals(door) ) {
            return false;
        } else if (direction.equals("RIGHT") && !board[x][y + 1].equals(interiorWall) && !board[x][y+1].equals(door)) {
            return false;
        }
        return true;
    }


    public  void initBoard(){
        board = new String[][] {
        // "#" = wall, "-" = Pellet, "." = empty, "d" = door， "R" ＝ Power up
        {"#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"},
        {"#","-","-","-","-","-","-","-","-","-","-","-","-","#","#","-","-","-","-","-","-","-","-","-","-","-","-","#"},
        {"#","-","#","#","#","#","-","#","#","#","#","#","-","#","#","-","#","#","#","#","#","-","#","#","#","#","-","#"},
        {"#","R","#","#","#","#","-","#","#","#","#","#","-","#","#","-","#","#","#","#","#","-","#","#","#","#","R","#"},
        {"#","-","#","#","#","#","-","#","#","#","#","#","-","#","#","-","#","#","#","#","#","-","#","#","#","#","-","#"},
        {"#","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","#"},
        {"#","-","#","#","#","#","-","#","#","-","#","#","#","#","#","#","#","#","-","#","#","-","#","#","#","#","-","#"},
        {"#","-","#","#","#","#","-","#","#","-","#","#","#","#","#","#","#","#","-","#","#","-","#","#","#","#","-","#"},
        {"#","-","-","-","-","-","-","#","#","-","-","-","-","#","#","-","-","-","-","#","#","-","-","-","-","-","-","#"},
        {"#","#","#","#","#","#","-","#","#","#","#","#",".","#","#",".","#","#","#","#","#","-","#","#","#","#","#","#"},
        {"#","#","#","#","#","#","-","#","#","#","#","#",".","#","#",".","#","#","#","#","#","-","#","#","#","#","#","#"},
        {"#","#","#","#","#","#","-","#","#",".",".",".",".",".",".",".",".",".",".","#","#","-","#","#","#","#","#","#"},
        {"#","#","#","#","#","#","-","#","#",".","#","#","#","d","d","#","#","#",".","#","#","-","#","#","#","#","#","#"},
        {"#","#","#","#","#","#","-","#","#",".","#",".",".",".",".",".",".","#",".","#","#","-","#","#","#","#","#","#"},
        {".",".",".",".",".",".","-",".",".",".","#",".",".",".",".",".",".","#",".",".",".","-",".",".",".",".",".","."},
        {"#","#","#","#","#","#","-","#","#",".","#",".",".",".",".",".",".","#",".","#","#","-","#","#","#","#","#","#"},
        {"#","#","#","#","#","#","-","#","#",".","#","#","#","#","#","#","#","#",".","#","#","-","#","#","#","#","#","#"},
        {"#","#","#","#","#","#","-","#","#",".",".",".",".",".",".",".",".",".",".","#","#","-","#","#","#","#","#","#"},
        {"#","#","#","#","#","#","-","#","#",".","#","#","#","#","#","#","#","#",".","#","#","-","#","#","#","#","#","#"},
        {"#","#","#","#","#","#","-","#","#",".","#","#","#","#","#","#","#","#",".","#","#","-","#","#","#","#","#","#"},
        {"#","-","-","-","-","-","-","-","-","-","-","-","-","#","#","-","-","-","-","-","-","-","-","-","-","-","-","#"},
        {"#","-","#","#","#","#","-","#","#","#","#","#","-","#","#","-","#","#","#","#","#","-","#","#","#","#","-","#"},
        {"#","-","#","#","#","#","-","#","#","#","#","#","-","#","#","-","#","#","#","#","#","-","#","#","#","#","-","#"},
        {"#","R","-","-","#","#","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","#","#","-","-","R","#"},
        {"#","#","#","-","#","#","-","#","#","-","#","#","#","#","#","#","#","#","-","#","#","-","#","#","-","#","#","#"},
        {"#","#","#","-","#","#","-","#","#","-","#","#","#","#","#","#","#","#","-","#","#","-","#","#","-","#","#","#"},
        {"#","-","-","-","-","-","-","#","#","-","-","-","-","#","#","-","-","-","-","#","#","-","-","-","-","-","-","#"},
        {"#","-","#","#","#","#","#","#","#","#","#","#","-","#","#","-","#","#","#","#","#","#","#","#","#","#","-","#"},
        {"#","-","#","#","#","#","#","#","#","#","#","#","-","#","#","-","#","#","#","#","#","#","#","#","#","#","-","#"},
        {"#","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","#"},
        {"#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"}};
        
        boardWidth = board[0].length;
        boardHeight = board.length;
        // Pacman should be placed at the bottom or top corner at each start of the game. 
        board[boardWidth-2][1]=pacman;
        pacmanEntity.setX(boardWidth-2);
        pacmanEntity.setY(1);
    }
    public String getStatus(int i, int j){
        String result = board[i][j];
        return result;
    }

    public int getBoardWidth(){
        return boardWidth;
    }
    
    public int getBoardHeight(){
        return boardHeight;
    }

    @Override
    public void playerPositionChanged(){}
}


// Idea for wormholes
// if (pacmanEntity.getY()==17 && pacmanEntity.getX()==10){
//     pacmanEntity.setY(2);
//     Board[x][y]=" ";
//     Board[x][2]=pacman;
// }
// else{
// }